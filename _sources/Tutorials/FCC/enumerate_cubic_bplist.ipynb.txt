{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Generate a list of boundary-plane vectors\n",
    "\n",
    "In this code, we determine the list of boundary-plane orientation vectors, represented using the Miller indices in the primitve **Coincidence Site Lattice**. These boundary-plane vectors  fall in the fundamental zone of boundary-plane orientations."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import byxtal.tools as gbt\n",
    "import byxtal.lattice as gbl\n",
    "import pickle as pkl\n",
    "import numpy as np\n",
    "import numpy.linalg as nla\n",
    "import byxtal.misorient_fz as mfz\n",
    "import gbpy.generate_hkl_indices as ghi"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. `l1`: The lattice object.\n",
    "2. `l_p_po`: $\\Lambda_p^{po}$\n",
    "3. `sig_mats`: The $\\Sigma$-miorientation in the primitive $p$ reference frame. For example, we use the variable `T_p1top2_p1`\n",
    "4. `csl_mats`: The CSL lattice basis vectors in the primitive $p$ reference frame. For example, we use the variable `l_csl_p` denoting $\\Lambda_{csl}^p$\n",
    "5. `dsc_mats`: The DSC lattice basis vectors in the primitive $p$ reference frame. For example, we use the variable `l_dsc_p` denoting $\\Lambda_{dsc}^p$\n",
    "6. `bxt_symm_props`: The symmetry aspects of the $\\Sigma$-miorientation\n",
    "    + `bxt_symm_grp`: The point-group symmetry of the bicrystal. This is the symmetry for the Boundary-plane orientations.\n",
    "    + `symm_grp_ax`: The axes of the symmetry point-group.\n",
    "7. `num1`: Refinement of the grid on the 2-sphere for determining boundary-plane orientations. For example, `num1=3` will produce approximately (of the order of) `num1^3 (=27)` vectors.\n",
    "    + The number of boundary-plane orientations will depend on the bicrystal symmetry of the $\\Sigma$ misorientation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "######################################################################\n",
    "###### Boundary-plane matrix properties with A_cut\n",
    "#####################################################################\n",
    "l1=gbl.Lattice('Al')\n",
    "pkl_name = l1.elem_type+'_byxtal_props.pkl'\n",
    "jar = open(pkl_name,'rb')\n",
    "s1=pkl.load(jar)\n",
    "jar.close()\n",
    "\n",
    "sig_mats = s1['sig_mats']\n",
    "csl_mats = s1['csl_mats']\n",
    "dsc_mats = s1['dsc_mats']\n",
    "bxt_symm_props = s1['csl_symm_props']\n",
    "\n",
    "l_p_po = l1.l_p_po\n",
    "\n",
    "num1 = 3"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. `s1_keys`: The \"string\" keys for the variables `sig_mats`, `csl_mats`, `dsc_mats`, `bxt_symm_props`\n",
    "2. `hkl_sig_inds`: Dictionary for saving boundary-plane orientations for each $\\Sigma$-misorientation\n",
    "    + `hkl_inds`: Indices of boundary-plane orientation for a given $\\Sigma$-misorientation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3_1\n",
      "5_1\n",
      "7_1\n",
      "9_1\n",
      "11_1\n",
      "13_1\n",
      "13_2\n",
      "15_1\n",
      "17_1\n",
      "17_2\n",
      "19_1\n",
      "19_2\n"
     ]
    }
   ],
   "source": [
    "s1_keys = list(bxt_symm_props.keys())\n",
    "hkl_sig_inds = {}\n",
    "\n",
    "for sig_id in s1_keys:\n",
    "    # sig_id = s1_keys[0]\n",
    "# for ct1 in range(10):\n",
    "#     sig_id = s1_keys[ct1]\n",
    "    print(sig_id)\n",
    "\n",
    "    l_p_po = l1.l_p_po\n",
    "    l_po_p = nla.inv(l_p_po)\n",
    "\n",
    "    bp_symm_grp = bxt_symm_props[sig_id]['bxt_symm_grp']\n",
    "    symm_grp_ax = bxt_symm_props[sig_id]['symm_grp_ax']\n",
    "    l_csl_p = csl_mats[sig_id]\n",
    "\n",
    "\n",
    "    l_csl_po = l_p_po.dot(l_csl_p)\n",
    "    l_csl_props = {}\n",
    "\n",
    "    l_csl_props['l_csl_po'] = l_csl_po\n",
    "    l_csl_props['symm_grp_ax'] = symm_grp_ax\n",
    "    l_csl_props['bp_symm_grp'] = bp_symm_grp\n",
    "\n",
    "    hkl_inds = ghi.gen_hkl_props(l_csl_props, num1)\n",
    "    hkl_sig_inds[sig_id] = hkl_inds\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Save the list of boundary-plane orientations in `hkl_sig_inds` dictionary."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "########################################################################\n",
    "pkl_name = 'bp_list_' + l1.elem_type + '.pkl'\n",
    "jar = open(pkl_name, 'wb')\n",
    "bp_list = {}\n",
    "bp_list['l_p_po'] = l_p_po\n",
    "bp_list['miller_inds'] = hkl_sig_inds\n",
    "pkl.dump(bp_list, jar)\n",
    "jar.close()\n",
    "########################################################################\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# l_CSLbpb_CSLp = {}\n",
    "# l_CSLbpbSig_CSLp = {}\n",
    "\n",
    "# lat_par = l1.lat_params['a']\n",
    "# rCut = lat_par*3\n",
    "# A_cut = (rCut+lat_par)**2\n",
    "\n",
    "\n",
    "# l_CSLbpb_CSLp[sig_id] = l_CSLbpb_CSLp_mat\n",
    "# l_CSLbpbSig_CSLp_mat = ghi.gen_Acut_bpb(l_CSLbpb_CSLp_mat, l_csl_po, rCut, A_cut)\n",
    "# l_CSLbpbSig_CSLp[sig_id] = l_CSLbpbSig_CSLp_mat\n",
    "\n",
    "# gb_props['l_CSLbpb_CSLp'] = l_CSLbpb_CSLp\n",
    "# gb_props['l_CSLbpbSig_CSLp'] = l_CSLbpbSig_CSLp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'l_p_po': array([[0.   , 2.025, 2.025],\n",
       "        [2.025, 0.   , 2.025],\n",
       "        [2.025, 2.025, 0.   ]]),\n",
       " 'miller_inds': {'3_1': array([[ 0., -1.,  2.],\n",
       "         [ 1., -2.,  1.],\n",
       "         [ 0.,  0.,  1.],\n",
       "         [ 1., -1.,  2.],\n",
       "         [ 2., -2.,  1.],\n",
       "         [ 1., -3.,  0.],\n",
       "         [ 2., -3.,  2.],\n",
       "         [ 2., -3.,  3.],\n",
       "         [ 0., -3.,  2.],\n",
       "         [ 2., -3.,  0.],\n",
       "         [ 1., -2.,  0.],\n",
       "         [ 0., -1.,  3.],\n",
       "         [ 2., -3.,  1.],\n",
       "         [ 1., -2.,  3.],\n",
       "         [ 1., -1.,  1.],\n",
       "         [ 2., -2.,  3.],\n",
       "         [ 1., -3.,  1.],\n",
       "         [ 3., -3.,  2.],\n",
       "         [ 0., -3.,  1.],\n",
       "         [ 1., -1.,  0.],\n",
       "         [ 1., -2.,  2.],\n",
       "         [ 1., -3.,  3.],\n",
       "         [ 0., -1.,  0.],\n",
       "         [ 1., -3.,  2.],\n",
       "         [ 0., -1.,  1.],\n",
       "         [ 3., -3.,  1.],\n",
       "         [ 1., -1.,  3.],\n",
       "         [ 0., -2.,  1.],\n",
       "         [ 0., -2.,  3.]]),\n",
       "  '5_1': array([[ 1.,  0.,  2.],\n",
       "         [ 1.,  0.,  1.],\n",
       "         [ 2.,  0.,  3.],\n",
       "         [ 1.,  0.,  2.],\n",
       "         [ 1.,  0.,  3.],\n",
       "         [ 0.,  0.,  1.],\n",
       "         [ 1., -2., -1.],\n",
       "         [ 1., -2.,  0.],\n",
       "         [ 5., -3.,  2.],\n",
       "         [ 2., -1.,  2.],\n",
       "         [ 2., -2.,  3.],\n",
       "         [ 1., -1.,  1.],\n",
       "         [ 2., -1.,  1.],\n",
       "         [ 3., -2.,  2.],\n",
       "         [ 3., -3.,  2.],\n",
       "         [ 1., -2.,  2.],\n",
       "         [ 3., -1.,  2.],\n",
       "         [ 1., -1.,  3.],\n",
       "         [ 3., -2.,  3.],\n",
       "         [ 1., -1.,  0.],\n",
       "         [ 2., -3.,  1.],\n",
       "         [ 1., -2.,  1.],\n",
       "         [ 4., -3.,  3.],\n",
       "         [ 4., -2.,  3.],\n",
       "         [ 2., -3.,  3.],\n",
       "         [ 2., -2.,  1.],\n",
       "         [ 3., -2.,  1.],\n",
       "         [ 5., -3.,  3.],\n",
       "         [ 1., -2.,  3.],\n",
       "         [ 4., -1.,  3.],\n",
       "         [ 3., -3.,  1.],\n",
       "         [ 4., -3.,  1.],\n",
       "         [ 2., -3.,  2.],\n",
       "         [ 3., -1.,  3.],\n",
       "         [ 2., -1.,  3.],\n",
       "         [ 4., -3.,  2.],\n",
       "         [ 2., -3., -1.],\n",
       "         [ 1., -1.,  2.],\n",
       "         [ 5., -2.,  3.],\n",
       "         [ 2., -3.,  0.]]),\n",
       "  '7_1': array([[-2., -1.,  1.],\n",
       "         [-3.,  0.,  1.],\n",
       "         [-2., -1., -1.],\n",
       "         [-3., -3.,  2.],\n",
       "         [-3., -1.,  1.],\n",
       "         [-1.,  1.,  1.],\n",
       "         [-2., -1.,  2.],\n",
       "         [-1.,  0.,  1.],\n",
       "         [-3., -2.,  2.],\n",
       "         [-3.,  1.,  3.],\n",
       "         [-3.,  2.,  2.],\n",
       "         [-2.,  0.,  1.],\n",
       "         [-2., -3.,  2.],\n",
       "         [-2., -3.,  1.],\n",
       "         [-1., -2.,  1.],\n",
       "         [-2., -1.,  0.],\n",
       "         [-3.,  2.,  3.],\n",
       "         [-3., -2.,  3.],\n",
       "         [-1.,  0.,  0.],\n",
       "         [-2.,  1.,  2.],\n",
       "         [-1., -1.,  1.],\n",
       "         [-3.,  1.,  2.],\n",
       "         [-3., -2., -1.],\n",
       "         [-3., -1.,  3.],\n",
       "         [-1., -1.,  0.],\n",
       "         [-3., -2.,  1.],\n",
       "         [-2.,  1.,  1.],\n",
       "         [-3., -1.,  2.],\n",
       "         [-3., -1., -1.],\n",
       "         [-2., -1.,  1.],\n",
       "         [-3.,  1.,  1.],\n",
       "         [-3., -1.,  0.],\n",
       "         [-2., -2.,  1.],\n",
       "         [-3., -2.,  0.],\n",
       "         [-3.,  0.,  2.],\n",
       "         [-3., -3.,  1.]]),\n",
       "  '9_1': array([[ 2.,  1.,  3.],\n",
       "         [ 1.,  2.,  5.],\n",
       "         [ 1.,  1.,  1.],\n",
       "         [ 1.,  1.,  2.],\n",
       "         [ 3.,  1.,  3.],\n",
       "         [-1.,  1.,  3.],\n",
       "         [ 1.,  0.,  2.],\n",
       "         [ 2.,  3.,  4.],\n",
       "         [ 0.,  0.,  1.],\n",
       "         [ 1.,  1.,  3.],\n",
       "         [ 1.,  2.,  3.],\n",
       "         [-2.,  0.,  3.],\n",
       "         [ 5.,  3.,  5.],\n",
       "         [-1.,  0.,  2.],\n",
       "         [ 5.,  2.,  5.],\n",
       "         [ 4.,  3.,  5.],\n",
       "         [ 0.,  1.,  4.],\n",
       "         [ 2.,  3.,  2.],\n",
       "         [ 4.,  3.,  6.],\n",
       "         [-1.,  2.,  4.],\n",
       "         [-1.,  2.,  5.],\n",
       "         [ 5.,  3.,  6.],\n",
       "         [ 0.,  3.,  4.],\n",
       "         [ 1.,  3.,  6.],\n",
       "         [ 2.,  1.,  4.],\n",
       "         [ 2.,  3.,  6.],\n",
       "         [ 3.,  3.,  5.],\n",
       "         [ 2.,  3.,  3.],\n",
       "         [ 2.,  0.,  3.],\n",
       "         [ 1.,  0.,  3.],\n",
       "         [ 2.,  3.,  5.],\n",
       "         [ 1.,  2.,  2.],\n",
       "         [-2.,  1.,  4.],\n",
       "         [ 0.,  1.,  3.],\n",
       "         [ 0.,  1.,  1.],\n",
       "         [ 2.,  2.,  3.],\n",
       "         [-1.,  1.,  4.],\n",
       "         [ 1.,  2.,  1.],\n",
       "         [ 1.,  3.,  3.],\n",
       "         [ 1.,  3.,  5.],\n",
       "         [ 1.,  1.,  4.],\n",
       "         [ 3.,  3.,  4.],\n",
       "         [ 3.,  2.,  5.],\n",
       "         [ 0.,  1.,  2.],\n",
       "         [ 0.,  3.,  5.],\n",
       "         [ 4.,  1.,  4.],\n",
       "         [ 3.,  2.,  3.],\n",
       "         [ 3.,  1.,  4.],\n",
       "         [ 2.,  2.,  5.],\n",
       "         [-1.,  0.,  1.],\n",
       "         [ 0.,  2.,  3.],\n",
       "         [-1.,  0.,  3.],\n",
       "         [ 4.,  3.,  4.],\n",
       "         [-1.,  2.,  3.],\n",
       "         [-1.,  1.,  2.],\n",
       "         [ 1.,  0.,  1.],\n",
       "         [ 0.,  2.,  5.],\n",
       "         [ 3.,  2.,  4.],\n",
       "         [ 1.,  3.,  4.],\n",
       "         [-2.,  1.,  3.],\n",
       "         [ 2.,  1.,  2.],\n",
       "         [ 1.,  3.,  2.],\n",
       "         [ 1.,  2.,  4.],\n",
       "         [ 4.,  2.,  5.]]),\n",
       "  '11_1': array([[ 1., -1.,  2.],\n",
       "         [ 3., -2.,  2.],\n",
       "         [ 3.,  1.,  2.],\n",
       "         [ 1., -3.,  2.],\n",
       "         [ 0., -1.,  1.],\n",
       "         [ 3., -1.,  1.],\n",
       "         [ 1.,  0.,  0.],\n",
       "         [ 3., -1.,  3.],\n",
       "         [ 0., -2.,  3.],\n",
       "         [ 1., -1.,  3.],\n",
       "         [ 2.,  1.,  1.],\n",
       "         [ 3.,  0.,  1.],\n",
       "         [ 3.,  1.,  3.],\n",
       "         [ 2., -2.,  1.],\n",
       "         [ 1., -1.,  0.],\n",
       "         [ 0., -3.,  2.],\n",
       "         [ 0., -3.,  1.],\n",
       "         [ 0., -1.,  3.],\n",
       "         [ 3., -3.,  2.],\n",
       "         [ 2., -3.,  3.],\n",
       "         [ 3., -3.,  1.],\n",
       "         [ 0.,  0.,  1.],\n",
       "         [ 2.,  0.,  3.],\n",
       "         [ 3., -1.,  2.],\n",
       "         [ 3., -2.,  0.],\n",
       "         [ 1., -2.,  2.],\n",
       "         [ 0., -2.,  1.],\n",
       "         [ 2.,  1.,  0.],\n",
       "         [ 1.,  0.,  3.],\n",
       "         [ 3., -2.,  3.],\n",
       "         [ 2., -2.,  3.],\n",
       "         [ 2.,  1.,  2.],\n",
       "         [ 3.,  0.,  2.],\n",
       "         [ 2., -1.,  2.],\n",
       "         [ 1., -2.,  1.],\n",
       "         [ 2., -3.,  1.],\n",
       "         [ 2.,  1.,  3.],\n",
       "         [ 0., -1.,  0.],\n",
       "         [ 1., -3.,  0.],\n",
       "         [ 2., -3.,  2.],\n",
       "         [ 2.,  0.,  1.],\n",
       "         [ 3., -1.,  0.],\n",
       "         [ 1., -2.,  0.],\n",
       "         [ 1., -1.,  1.],\n",
       "         [ 1., -1.,  2.],\n",
       "         [ 3.,  1.,  0.],\n",
       "         [ 2., -1.,  1.],\n",
       "         [ 1.,  0.,  2.],\n",
       "         [ 2., -1.,  3.],\n",
       "         [ 1., -2.,  3.],\n",
       "         [ 2., -3.,  0.],\n",
       "         [ 2., -1.,  0.],\n",
       "         [ 3., -2.,  1.],\n",
       "         [ 1., -3.,  3.],\n",
       "         [ 0., -1.,  2.],\n",
       "         [ 1., -3.,  1.],\n",
       "         [ 1.,  0.,  1.],\n",
       "         [ 3.,  1.,  1.]]),\n",
       "  '13_1': array([[-1.,  0.,  3.],\n",
       "         [ 0.,  1.,  3.],\n",
       "         [-1., -1.,  3.],\n",
       "         [ 1.,  1.,  1.],\n",
       "         [-3.,  2.,  2.],\n",
       "         [-3.,  1.,  2.],\n",
       "         [ 1.,  2.,  3.],\n",
       "         [ 1.,  3.,  3.],\n",
       "         [-1., -1.,  2.],\n",
       "         [-2.,  1.,  2.],\n",
       "         [-3.,  2.,  3.],\n",
       "         [-1.,  0.,  1.],\n",
       "         [-2.,  1.,  3.],\n",
       "         [ 1.,  1.,  3.],\n",
       "         [-1.,  2.,  3.],\n",
       "         [-1.,  1.,  1.],\n",
       "         [ 1.,  2.,  2.],\n",
       "         [ 0.,  1.,  2.],\n",
       "         [-1.,  1.,  3.],\n",
       "         [ 0.,  0.,  1.],\n",
       "         [-2.,  3.,  3.],\n",
       "         [ 0.,  1.,  1.],\n",
       "         [-1.,  1.,  2.],\n",
       "         [-2.,  2.,  3.],\n",
       "         [ 0.,  2.,  3.],\n",
       "         [-1.,  0.,  2.],\n",
       "         [-1.,  2.,  2.],\n",
       "         [-2.,  1.,  1.],\n",
       "         [ 2.,  2.,  3.],\n",
       "         [ 1.,  1.,  2.],\n",
       "         [-3.,  1.,  3.],\n",
       "         [-2., -1.,  3.],\n",
       "         [-1.,  3.,  3.],\n",
       "         [-2.,  0.,  3.],\n",
       "         [ 2.,  3.,  3.]]),\n",
       "  '13_2': array([[ 1.,  0., -2.],\n",
       "         [ 0.,  0., -1.],\n",
       "         [ 1.,  0., -1.],\n",
       "         [ 1.,  0., -3.],\n",
       "         [ 2.,  0., -3.],\n",
       "         [ 1.,  2.,  1.],\n",
       "         [ 2.,  3., -3.],\n",
       "         [ 1.,  1., -2.],\n",
       "         [ 3.,  3., -2.],\n",
       "         [ 1.,  1., -1.],\n",
       "         [ 4.,  3., -2.],\n",
       "         [ 4.,  3., -3.],\n",
       "         [ 1.,  2., -3.],\n",
       "         [ 4.,  2., -3.],\n",
       "         [ 2.,  3.,  1.],\n",
       "         [ 2.,  1., -2.],\n",
       "         [ 1.,  1.,  0.],\n",
       "         [ 1.,  2., -1.],\n",
       "         [ 2.,  1., -3.],\n",
       "         [ 1.,  2.,  0.],\n",
       "         [ 2.,  2., -3.],\n",
       "         [ 2.,  3.,  0.],\n",
       "         [ 1.,  1., -3.],\n",
       "         [ 3.,  1., -2.],\n",
       "         [ 3.,  2., -2.],\n",
       "         [ 2.,  2., -1.],\n",
       "         [ 5.,  3., -2.],\n",
       "         [ 3.,  2., -1.],\n",
       "         [ 4.,  1., -3.],\n",
       "         [ 5.,  3., -3.],\n",
       "         [ 2.,  3., -2.],\n",
       "         [ 4.,  3., -1.],\n",
       "         [ 1.,  2., -2.],\n",
       "         [ 2.,  1., -1.],\n",
       "         [ 3.,  2., -3.],\n",
       "         [ 3.,  1., -3.],\n",
       "         [ 3.,  3., -1.],\n",
       "         [ 5.,  2., -3.],\n",
       "         [ 2.,  3., -1.]]),\n",
       "  '15_1': array([[ 1.,  3., -2.],\n",
       "         [ 3., -1., -2.],\n",
       "         [ 1.,  2., -2.],\n",
       "         [ 3.,  3.,  1.],\n",
       "         [ 1.,  3.,  3.],\n",
       "         [ 2.,  1., -2.],\n",
       "         [ 0.,  3.,  1.],\n",
       "         [ 2.,  0., -3.],\n",
       "         [ 1.,  3.,  1.],\n",
       "         [ 2.,  1.,  0.],\n",
       "         [ 0.,  0., -1.],\n",
       "         [ 2., -2., -3.],\n",
       "         [ 1.,  2.,  0.],\n",
       "         [ 0.,  1., -2.],\n",
       "         [ 1., -1., -2.],\n",
       "         [ 2.,  3.,  1.],\n",
       "         [ 1., -2., -3.],\n",
       "         [ 1.,  1.,  0.],\n",
       "         [ 2.,  3.,  3.],\n",
       "         [ 1.,  3., -3.],\n",
       "         [ 1.,  2.,  1.],\n",
       "         [ 2.,  3., -3.],\n",
       "         [ 3.,  2.,  1.],\n",
       "         [ 1.,  0.,  0.],\n",
       "         [ 3.,  0., -2.],\n",
       "         [ 3.,  2., -3.],\n",
       "         [ 0., -1., -2.],\n",
       "         [ 1., -2., -2.],\n",
       "         [ 1.,  1., -3.],\n",
       "         [ 2., -1., -2.],\n",
       "         [ 0., -2., -3.],\n",
       "         [ 3., -1., -3.],\n",
       "         [ 3.,  2.,  0.],\n",
       "         [ 1.,  2., -1.],\n",
       "         [ 0.,  1.,  0.],\n",
       "         [ 1.,  0., -2.],\n",
       "         [ 3.,  3., -1.],\n",
       "         [ 1.,  0., -1.],\n",
       "         [ 3.,  2.,  2.],\n",
       "         [ 0.,  3.,  2.],\n",
       "         [ 3.,  1.,  0.],\n",
       "         [ 3.,  0., -1.],\n",
       "         [ 3.,  3., -2.],\n",
       "         [ 1.,  0., -3.],\n",
       "         [ 1., -1., -1.],\n",
       "         [ 1.,  3.,  0.],\n",
       "         [ 2.,  1.,  1.],\n",
       "         [ 2.,  1., -3.],\n",
       "         [ 3.,  1., -1.],\n",
       "         [ 1.,  2.,  2.],\n",
       "         [ 0., -1., -3.],\n",
       "         [ 3.,  1., -2.],\n",
       "         [ 2.,  2., -1.],\n",
       "         [ 0.,  1.,  1.],\n",
       "         [ 0., -1., -1.],\n",
       "         [ 0.,  1., -3.],\n",
       "         [ 2.,  3.,  2.],\n",
       "         [ 2.,  3., -2.],\n",
       "         [ 3.,  2., -1.],\n",
       "         [ 3.,  2., -2.],\n",
       "         [ 0.,  3., -2.],\n",
       "         [ 1., -3., -3.],\n",
       "         [ 0.,  2., -1.],\n",
       "         [ 1.,  1., -1.],\n",
       "         [ 3., -2., -3.],\n",
       "         [ 3.,  3.,  2.],\n",
       "         [ 2.,  2.,  1.],\n",
       "         [ 2., -3., -3.],\n",
       "         [ 1.,  1., -2.],\n",
       "         [ 0.,  1., -1.],\n",
       "         [ 2.,  3., -1.],\n",
       "         [ 1.,  2., -3.],\n",
       "         [ 0.,  3., -1.],\n",
       "         [ 2., -1., -3.],\n",
       "         [ 2.,  3.,  0.],\n",
       "         [ 1., -1., -3.],\n",
       "         [ 3.,  1.,  1.],\n",
       "         [ 1.,  1.,  1.],\n",
       "         [ 2.,  2., -3.],\n",
       "         [ 0.,  2., -3.],\n",
       "         [ 1.,  3.,  2.],\n",
       "         [ 2.,  1., -1.],\n",
       "         [ 2., -1., -1.],\n",
       "         [ 3.,  1., -3.],\n",
       "         [ 0.,  2.,  1.],\n",
       "         [ 1.,  3., -1.],\n",
       "         [ 2.,  0., -1.],\n",
       "         [ 3., -1., -1.],\n",
       "         [ 3., -2., -2.]]),\n",
       "  '17_1': array([[ 0., -1.,  1.],\n",
       "         [ 0.,  0.,  1.],\n",
       "         [ 0., -1.,  3.],\n",
       "         [ 0., -2.,  3.],\n",
       "         [ 0., -1.,  2.],\n",
       "         [ 2.,  1.,  1.],\n",
       "         [ 3., -1.,  6.],\n",
       "         [ 2.,  1.,  3.],\n",
       "         [ 2., -2.,  5.],\n",
       "         [ 3., -2.,  5.],\n",
       "         [ 1., -1.,  3.],\n",
       "         [ 2.,  1.,  2.],\n",
       "         [ 2.,  0.,  3.],\n",
       "         [ 2., -3.,  5.],\n",
       "         [ 3.,  0.,  5.],\n",
       "         [ 1.,  0.,  2.],\n",
       "         [ 1., -1.,  4.],\n",
       "         [ 1., -2.,  4.],\n",
       "         [ 3.,  1.,  2.],\n",
       "         [ 3.,  1.,  3.],\n",
       "         [ 2.,  0.,  5.],\n",
       "         [ 2.,  1.,  4.],\n",
       "         [ 3.,  1.,  6.],\n",
       "         [ 2.,  1.,  5.],\n",
       "         [ 2., -1.,  4.],\n",
       "         [ 2., -1.,  5.],\n",
       "         [ 3.,  1.,  4.],\n",
       "         [ 1.,  0.,  3.],\n",
       "         [ 3., -1.,  5.],\n",
       "         [ 1.,  0.,  1.],\n",
       "         [ 1., -1.,  2.],\n",
       "         [ 1.,  0.,  4.],\n",
       "         [ 1., -2.,  3.],\n",
       "         [ 3., -2.,  6.],\n",
       "         [ 3., -1.,  4.],\n",
       "         [ 3.,  1.,  5.],\n",
       "         [ 2., -1.,  3.],\n",
       "         [ 1., -3.,  4.],\n",
       "         [ 3.,  0.,  4.]]),\n",
       "  '17_2': array([[-1.,  3.,  0.],\n",
       "         [-1.,  3.,  0.],\n",
       "         [-3.,  2.,  1.],\n",
       "         [-2., -1.,  1.],\n",
       "         [-1.,  0.,  1.],\n",
       "         [-2.,  2.,  1.],\n",
       "         [-3.,  1.,  2.],\n",
       "         [-2.,  1.,  1.],\n",
       "         [ 0.,  3., -2.],\n",
       "         [-2.,  3.,  3.],\n",
       "         [ 0.,  3.,  2.],\n",
       "         [-3.,  2.,  2.],\n",
       "         [-1.,  0.,  0.],\n",
       "         [ 0.,  3., -1.],\n",
       "         [-2.,  3.,  2.],\n",
       "         [-1.,  1.,  2.],\n",
       "         [-2.,  1., -1.],\n",
       "         [ 0.,  1., -1.],\n",
       "         [-3.,  2.,  0.],\n",
       "         [ 0.,  1.,  0.],\n",
       "         [-3.,  2., -2.],\n",
       "         [-3.,  3., -2.],\n",
       "         [-1.,  1., -1.],\n",
       "         [-3.,  2.,  3.],\n",
       "         [-2.,  3., -1.],\n",
       "         [ 0.,  2., -1.],\n",
       "         [-3.,  0.,  1.],\n",
       "         [-3., -1.,  1.],\n",
       "         [-2.,  3., -3.],\n",
       "         [-1.,  2., -2.],\n",
       "         [-2.,  3.,  1.],\n",
       "         [-2.,  2.,  3.],\n",
       "         [-2.,  3., -2.],\n",
       "         [-2.,  0.,  1.],\n",
       "         [-1.,  2.,  3.],\n",
       "         [-1.,  2., -1.],\n",
       "         [-3.,  2., -1.],\n",
       "         [-3.,  3., -1.],\n",
       "         [-1.,  3.,  3.],\n",
       "         [-1.,  2.,  1.],\n",
       "         [-3.,  3.,  2.],\n",
       "         [-1.,  3., -2.],\n",
       "         [ 0.,  2.,  1.],\n",
       "         [-2.,  1.,  0.],\n",
       "         [-3.,  1.,  3.],\n",
       "         [-3., -1.,  2.],\n",
       "         [-2.,  2., -1.],\n",
       "         [-1.,  2.,  2.],\n",
       "         [-1.,  3., -3.],\n",
       "         [-3.,  1., -1.],\n",
       "         [-2.,  1.,  3.],\n",
       "         [-1.,  1.,  0.],\n",
       "         [-3.,  1.,  1.],\n",
       "         [-2.,  3.,  0.],\n",
       "         [-1.,  2.,  0.],\n",
       "         [ 0.,  1.,  1.],\n",
       "         [-3.,  1.,  0.],\n",
       "         [-1.,  3., -1.],\n",
       "         [-1.,  3.,  1.],\n",
       "         [-2.,  1.,  2.],\n",
       "         [-3.,  3.,  1.],\n",
       "         [-1.,  1.,  1.],\n",
       "         [-3.,  0.,  2.],\n",
       "         [-1.,  3.,  2.],\n",
       "         [ 0.,  3.,  1.]]),\n",
       "  '19_1': array([[ 2.,  0., -1.],\n",
       "         [ 3.,  0., -1.],\n",
       "         [ 3., -1., -2.],\n",
       "         [ 1.,  0., -1.],\n",
       "         [ 0., -1., -2.],\n",
       "         [ 2.,  1., -3.],\n",
       "         [ 2., -3., -2.],\n",
       "         [ 3., -1., -3.],\n",
       "         [ 0., -1., -1.],\n",
       "         [ 0., -1.,  0.],\n",
       "         [ 2., -3., -1.],\n",
       "         [ 1., -2., -2.],\n",
       "         [ 1., -2.,  0.],\n",
       "         [ 3.,  1., -2.],\n",
       "         [ 1., -3., -1.],\n",
       "         [ 3., -2., -1.],\n",
       "         [ 0., -3., -1.],\n",
       "         [ 3., -2., -2.],\n",
       "         [ 3.,  0., -2.],\n",
       "         [ 1., -3.,  0.],\n",
       "         [ 2., -2., -1.],\n",
       "         [ 3., -2.,  0.],\n",
       "         [ 2., -1.,  0.],\n",
       "         [ 0., -2., -3.],\n",
       "         [ 2., -1., -2.],\n",
       "         [ 1., -1.,  0.],\n",
       "         [ 0., -1., -3.],\n",
       "         [ 1., -3., -2.],\n",
       "         [ 3., -1.,  0.],\n",
       "         [ 0., -2., -1.],\n",
       "         [ 2.,  1., -2.],\n",
       "         [ 1., -1., -2.],\n",
       "         [ 2., -2., -3.],\n",
       "         [ 2.,  1.,  0.],\n",
       "         [ 2., -3.,  0.],\n",
       "         [ 0., -3., -2.],\n",
       "         [ 3.,  1.,  0.],\n",
       "         [ 1.,  0., -3.],\n",
       "         [ 2., -3., -3.],\n",
       "         [ 1., -3., -3.],\n",
       "         [ 1.,  0., -2.],\n",
       "         [ 1., -2., -3.],\n",
       "         [ 1., -2., -1.],\n",
       "         [ 2., -1., -1.],\n",
       "         [ 2.,  0., -3.],\n",
       "         [ 3.,  1., -3.],\n",
       "         [ 3.,  1., -1.],\n",
       "         [ 1., -1., -3.],\n",
       "         [ 1.,  0.,  0.],\n",
       "         [ 0.,  0., -1.],\n",
       "         [ 3., -1., -1.],\n",
       "         [ 1., -1., -1.],\n",
       "         [ 3., -3., -2.],\n",
       "         [ 2.,  1., -1.],\n",
       "         [ 3., -2., -3.],\n",
       "         [ 2., -1., -3.],\n",
       "         [ 3., -3., -1.]]),\n",
       "  '19_2': array([[-3.,  2.,  2.],\n",
       "         [-1.,  1.,  0.],\n",
       "         [-4.,  3.,  3.],\n",
       "         [-7.,  3.,  3.],\n",
       "         [-7.,  3.,  2.],\n",
       "         [-4.,  3.,  1.],\n",
       "         [-2.,  1.,  3.],\n",
       "         [-1.,  3., -1.],\n",
       "         [-2.,  0.,  1.],\n",
       "         [-3.,  1.,  1.],\n",
       "         [-2.,  1.,  2.],\n",
       "         [-8.,  2.,  3.],\n",
       "         [-3.,  2.,  3.],\n",
       "         [-7.,  1.,  3.],\n",
       "         [-8.,  3.,  3.],\n",
       "         [-4.,  0.,  3.],\n",
       "         [-5.,  1.,  3.],\n",
       "         [-1.,  2.,  0.],\n",
       "         [-2.,  3.,  1.],\n",
       "         [-4.,  3.,  2.],\n",
       "         [-5.,  2.,  2.],\n",
       "         [-1.,  0.,  2.],\n",
       "         [-3.,  1.,  4.],\n",
       "         [-2.,  3.,  0.],\n",
       "         [-7.,  2.,  3.],\n",
       "         [-2.,  1.,  1.],\n",
       "         [-4.,  1.,  3.],\n",
       "         [-3.,  2.,  1.],\n",
       "         [-5.,  3.,  2.],\n",
       "         [-5.,  3.,  1.],\n",
       "         [-2.,  2.,  1.],\n",
       "         [-3.,  3.,  1.],\n",
       "         [-5.,  0.,  3.],\n",
       "         [-3.,  1.,  2.],\n",
       "         [-3.,  1.,  3.],\n",
       "         [-3.,  0.,  4.],\n",
       "         [-2.,  0.,  3.],\n",
       "         [-4.,  1.,  2.],\n",
       "         [-5.,  2.,  3.],\n",
       "         [-3.,  0.,  5.],\n",
       "         [-1.,  0.,  1.],\n",
       "         [-1.,  1.,  1.],\n",
       "         [-4.,  2.,  1.],\n",
       "         [-5.,  1.,  2.],\n",
       "         [-4.,  2.,  3.],\n",
       "         [-6.,  2.,  3.],\n",
       "         [-3.,  1.,  5.],\n",
       "         [-6.,  1.,  3.],\n",
       "         [-3.,  0.,  2.],\n",
       "         [-3.,  2.,  4.],\n",
       "         [-5.,  3.,  3.],\n",
       "         [-6.,  3.,  2.],\n",
       "         [-3.,  3.,  2.]])}}"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bp_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
